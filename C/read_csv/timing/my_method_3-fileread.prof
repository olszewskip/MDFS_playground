Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 33.34      0.05     0.05 10040000     0.00     0.00  double __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*)
 26.67      0.09     0.04 10040000     0.00     0.00  std::__cxx11::stod(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)
 13.34      0.11     0.02 10040000     0.00     0.00  __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*)::_Save_errno::~_Save_errno()
 10.00      0.13     0.02 10040000     0.00     0.00  __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*)::_Save_errno::_Save_errno()
  6.67      0.14     0.01    25020     0.00     0.00  operator new(unsigned long, void*)
  6.67      0.15     0.01       10     1.00    14.50  populate_from_file(std::vector<double*, std::allocator<double*> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char)
  3.33      0.15     0.01        1     5.00     5.00  std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const
  0.00      0.15     0.00 10040000     0.00     0.00  __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*)::_Range_chk::_S_chk(double, std::integral_constant<bool, false>)
  0.00      0.15     0.00    60012     0.00     0.00  double*& std::forward<double*&>(std::remove_reference<double*&>::type&)
  0.00      0.15     0.00    40068     0.00     0.00  __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::base() const
  0.00      0.15     0.00    20010     0.00     0.00  bool __gnu_cxx::operator!=<double**, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&, __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&)
  0.00      0.15     0.00    20000     0.00     0.00  void __gnu_cxx::new_allocator<double*>::construct<double*, double*&>(double**, double*&)
  0.00      0.15     0.00    20000     0.00     0.00  __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::operator++()
  0.00      0.15     0.00    20000     0.00     0.00  __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::operator*() const
  0.00      0.15     0.00    20000     0.00     0.00  void std::allocator_traits<std::allocator<double*> >::construct<double*, double*&>(std::allocator<double*>&, double**, double*&)
  0.00      0.15     0.00    20000     0.00     0.00  void std::vector<double*, std::allocator<double*> >::emplace_back<double*&>(double*&)
  0.00      0.15     0.00    20000     0.00     0.00  std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)
  0.00      0.15     0.00    15160     0.00     0.00  double& std::forward<double&>(std::remove_reference<double&>::type&)
  0.00      0.15     0.00     5020     0.00     0.00  void __gnu_cxx::new_allocator<double>::construct<double, double&>(double*, double&)
  0.00      0.15     0.00     5020     0.00     0.00  void std::allocator_traits<std::allocator<double> >::construct<double, double&>(std::allocator<double>&, double*, double&)
  0.00      0.15     0.00     5020     0.00     0.00  void std::vector<double, std::allocator<double> >::emplace_back<double&>(double&)
  0.00      0.15     0.00     5020     0.00     0.00  std::vector<double, std::allocator<double> >::operator[](unsigned long)
  0.00      0.15     0.00      600     0.00     0.00  double* std::__niter_base<double*>(double*)
  0.00      0.15     0.00      410     0.00     0.00  std::vector<double, std::allocator<double> >::size() const
  0.00      0.15     0.00      400     0.00     0.00  __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const
  0.00      0.15     0.00      400     0.00     0.00  std::move_iterator<double*>::base() const
  0.00      0.15     0.00      400     0.00     0.00  std::move_iterator<double*>::move_iterator(double*)
  0.00      0.15     0.00      400     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double*>(std::move_iterator<double*>)
  0.00      0.15     0.00      400     0.00     0.00  double* std::__miter_base<double*>(double*)
  0.00      0.15     0.00      400     0.00     0.00  std::move_iterator<double*> std::__make_move_if_noexcept_iterator<double, std::move_iterator<double*> >(double*)
  0.00      0.15     0.00      310     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator()
  0.00      0.15     0.00      300     0.00     0.00  __gnu_cxx::new_allocator<double>::max_size() const
  0.00      0.15     0.00      200     0.00     0.00  __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::__normal_iterator(double* const&)
  0.00      0.15     0.00      200     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const
  0.00      0.15     0.00      200     0.00     0.00  std::vector<double, std::allocator<double> >::max_size() const
  0.00      0.15     0.00      200     0.00     0.00  double* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*)
  0.00      0.15     0.00      200     0.00     0.00  std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&)
  0.00      0.15     0.00      200     0.00     0.00  double* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*)
  0.00      0.15     0.00      200     0.00     0.00  double* std::__copy_move_a<true, double*, double*>(double*, double*, double*)
  0.00      0.15     0.00      200     0.00     0.00  double* std::__copy_move_a2<true, double*, double*>(double*, double*, double*)
  0.00      0.15     0.00      200     0.00     0.00  double* std::uninitialized_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*)
  0.00      0.15     0.00      200     0.00     0.00  double* std::__uninitialized_copy_a<std::move_iterator<double*>, double*, double>(std::move_iterator<double*>, std::move_iterator<double*>, double*, std::allocator<double>&)
  0.00      0.15     0.00      200     0.00     0.00  double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&)
  0.00      0.15     0.00      200     0.00     0.00  double* std::copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*)
  0.00      0.15     0.00      112     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      0.15     0.00      110     0.00     0.00  void std::_Destroy_aux<true>::__destroy<double*>(double*, double*)
  0.00      0.15     0.00      110     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long)
  0.00      0.15     0.00      110     0.00     0.00  void std::_Destroy<double*>(double*, double*)
  0.00      0.15     0.00      110     0.00     0.00  void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&)
  0.00      0.15     0.00      100     0.00     0.00  __gnu_cxx::new_allocator<double>::deallocate(double*, unsigned long)
  0.00      0.15     0.00      100     0.00     0.00  __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*)
  0.00      0.15     0.00      100     0.00     0.00  __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)
  0.00      0.15     0.00      100     0.00     0.00  std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const
  0.00      0.15     0.00      100     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long)
  0.00      0.15     0.00      100     0.00     0.00  std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long)
  0.00      0.15     0.00      100     0.00     0.00  std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long)
  0.00      0.15     0.00      100     0.00     0.00  void std::vector<double, std::allocator<double> >::_M_realloc_insert<double&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&)
  0.00      0.15     0.00      100     0.00     0.00  std::vector<double, std::allocator<double> >::end()
  0.00      0.15     0.00      100     0.00     0.00  std::vector<double, std::allocator<double> >::begin()
  0.00      0.15     0.00       72     0.00     0.00  double** std::__niter_base<double**>(double**)
  0.00      0.15     0.00       48     0.00     0.00  std::move_iterator<double**>::base() const
  0.00      0.15     0.00       48     0.00     0.00  std::vector<double*, std::allocator<double*> >::size() const
  0.00      0.15     0.00       48     0.00     0.00  std::move_iterator<double**>::move_iterator(double**)
  0.00      0.15     0.00       48     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double**>(std::move_iterator<double**>)
  0.00      0.15     0.00       48     0.00     0.00  double** std::__miter_base<double**>(double**)
  0.00      0.15     0.00       48     0.00     0.00  std::move_iterator<double**> std::__make_move_if_noexcept_iterator<double*, std::move_iterator<double**> >(double**)
  0.00      0.15     0.00       47     0.00     0.00  std::_Vector_base<double*, std::allocator<double*> >::_M_get_Tp_allocator()
  0.00      0.15     0.00       44     0.00     0.00  __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::__normal_iterator(double** const&)
  0.00      0.15     0.00       36     0.00     0.00  __gnu_cxx::new_allocator<double*>::max_size() const
  0.00      0.15     0.00       24     0.00     0.00  std::_Vector_base<double*, std::allocator<double*> >::_M_get_Tp_allocator() const
  0.00      0.15     0.00       24     0.00     0.00  std::vector<double*, std::allocator<double*> >::max_size() const
  0.00      0.15     0.00       24     0.00     0.00  double** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<double*>(double* const*, double* const*, double**)
  0.00      0.15     0.00       24     0.00     0.00  std::allocator_traits<std::allocator<double*> >::max_size(std::allocator<double*> const&)
  0.00      0.15     0.00       24     0.00     0.00  double** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<double**>, double**>(std::move_iterator<double**>, std::move_iterator<double**>, double**)
  0.00      0.15     0.00       24     0.00     0.00  double** std::__copy_move_a<true, double**, double**>(double**, double**, double**)
  0.00      0.15     0.00       24     0.00     0.00  double** std::__copy_move_a2<true, double**, double**>(double**, double**, double**)
  0.00      0.15     0.00       24     0.00     0.00  double** std::uninitialized_copy<std::move_iterator<double**>, double**>(std::move_iterator<double**>, std::move_iterator<double**>, double**)
  0.00      0.15     0.00       24     0.00     0.00  double** std::__uninitialized_copy_a<std::move_iterator<double**>, double**, double*>(std::move_iterator<double**>, std::move_iterator<double**>, double**, std::allocator<double*>&)
  0.00      0.15     0.00       24     0.00     0.00  double** std::__uninitialized_move_if_noexcept_a<double**, double**, std::allocator<double*> >(double**, double**, double**, std::allocator<double*>&)
  0.00      0.15     0.00       24     0.00     0.00  double** std::copy<std::move_iterator<double**>, double**>(std::move_iterator<double**>, std::move_iterator<double**>, double**)
  0.00      0.15     0.00       23     0.00     0.00  void std::_Destroy_aux<true>::__destroy<double**>(double**, double**)
  0.00      0.15     0.00       23     0.00     0.00  void std::_Destroy<double**>(double**, double**)
  0.00      0.15     0.00       23     0.00     0.00  void std::_Destroy<double**, double*>(double**, double**, std::allocator<double*>&)
  0.00      0.15     0.00       22     0.00     0.00  std::vector<double*, std::allocator<double*> >::end()
  0.00      0.15     0.00       22     0.00     0.00  std::vector<double*, std::allocator<double*> >::begin()
  0.00      0.15     0.00       13     0.00     0.00  std::_Vector_base<double*, std::allocator<double*> >::_M_deallocate(double**, unsigned long)
  0.00      0.15     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<double*>::deallocate(double**, unsigned long)
  0.00      0.15     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<double*>::allocate(unsigned long, void const*)
  0.00      0.15     0.00       12     0.00     0.00  __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::difference_type __gnu_cxx::operator-<double**, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&, __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&)
  0.00      0.15     0.00       12     0.00     0.00  std::vector<double*, std::allocator<double*> >::_M_check_len(unsigned long, char const*) const
  0.00      0.15     0.00       12     0.00     0.00  std::_Vector_base<double*, std::allocator<double*> >::_M_allocate(unsigned long)
  0.00      0.15     0.00       12     0.00     0.00  std::allocator_traits<std::allocator<double*> >::deallocate(std::allocator<double*>&, double**, unsigned long)
  0.00      0.15     0.00       12     0.00     0.00  std::allocator_traits<std::allocator<double*> >::allocate(std::allocator<double*>&, unsigned long)
  0.00      0.15     0.00       12     0.00     0.00  void std::vector<double*, std::allocator<double*> >::_M_realloc_insert<double*&>(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >, double*&)
  0.00      0.15     0.00       10     0.00     0.00  clear_matrix(std::vector<double*, std::allocator<double*> >*)
  0.00      0.15     0.00       10     0.00     0.00  __gnu_cxx::new_allocator<double>::new_allocator()
  0.00      0.15     0.00       10     0.00     0.00  __gnu_cxx::new_allocator<double>::~new_allocator()
  0.00      0.15     0.00       10     0.00     0.00  std::allocator<double>::allocator()
  0.00      0.15     0.00       10     0.00     0.00  std::allocator<double>::~allocator()
  0.00      0.15     0.00       10     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl()
  0.00      0.15     0.00       10     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl()
  0.00      0.15     0.00       10     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_base()
  0.00      0.15     0.00       10     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::~_Vector_base()
  0.00      0.15     0.00       10     0.00     0.00  std::vector<double*, std::allocator<double*> >::_M_erase_at_end(double**)
  0.00      0.15     0.00       10     0.00     0.00  std::vector<double*, std::allocator<double*> >::clear()
  0.00      0.15     0.00       10     0.00     0.00  std::vector<double, std::allocator<double> >::vector()
  0.00      0.15     0.00       10     0.00     0.00  std::vector<double, std::allocator<double> >::~vector()
  0.00      0.15     0.00        3     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const
  0.00      0.15     0.00        2     0.00     0.00  std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const
  0.00      0.15     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      0.15     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.15     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<double*>::new_allocator()
  0.00      0.15     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<double*>::~new_allocator()
  0.00      0.15     0.00        1     0.00     0.00  std::allocator<double*>::allocator()
  0.00      0.15     0.00        1     0.00     0.00  std::allocator<double*>::~allocator()
  0.00      0.15     0.00        1     0.00     0.00  std::_Vector_base<double*, std::allocator<double*> >::_Vector_impl::_Vector_impl()
  0.00      0.15     0.00        1     0.00     0.00  std::_Vector_base<double*, std::allocator<double*> >::_Vector_impl::~_Vector_impl()
  0.00      0.15     0.00        1     0.00     0.00  std::_Vector_base<double*, std::allocator<double*> >::_Vector_base()
  0.00      0.15     0.00        1     0.00     0.00  std::_Vector_base<double*, std::allocator<double*> >::~_Vector_base()
  0.00      0.15     0.00        1     0.00     0.00  std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00      0.15     0.00        1     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00      0.15     0.00        1     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)
  0.00      0.15     0.00        1     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&)
  0.00      0.15     0.00        1     0.00     0.00  std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)
  0.00      0.15     0.00        1     0.00     0.00  std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00      0.15     0.00        1     0.00     0.00  std::vector<double*, std::allocator<double*> >::vector()
  0.00      0.15     0.00        1     0.00     0.00  std::vector<double*, std::allocator<double*> >::~vector()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 6.66% of 0.15 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    0.15                 main [1]
                0.01    0.14      10/10          populate_from_file(std::vector<double*, std::allocator<double*> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char) [2]
                0.01    0.00       1/1           std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const [11]
                0.00    0.00      10/10          clear_matrix(std::vector<double*, std::allocator<double*> >*) [102]
                0.00    0.00       1/1           std::vector<double*, std::allocator<double*> >::vector() [133]
                0.00    0.00       1/1           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [131]
                0.00    0.00       1/1           std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [127]
                0.00    0.00       1/1           std::vector<double*, std::allocator<double*> >::~vector() [134]
-----------------------------------------------
                0.01    0.14      10/10          main [1]
[2]     96.7    0.01    0.14      10         populate_from_file(std::vector<double*, std::allocator<double*> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char) [2]
                0.04    0.09 10040000/10040000     std::__cxx11::stod(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*) [3]
                0.00    0.01   20000/20000       void std::vector<double*, std::allocator<double*> >::emplace_back<double*&>(double*&) [10]
                0.00    0.00    5020/5020        void std::vector<double, std::allocator<double> >::emplace_back<double&>(double&) [14]
                0.00    0.00   20000/20000       std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) [29]
                0.00    0.00    5020/5020        std::vector<double, std::allocator<double> >::operator[](unsigned long) [31]
                0.00    0.00      10/10          std::vector<double, std::allocator<double> >::vector() [113]
                0.00    0.00      10/410         std::vector<double, std::allocator<double> >::size() const [33]
                0.00    0.00      10/10          std::vector<double, std::allocator<double> >::~vector() [114]
-----------------------------------------------
                0.04    0.09 10040000/10040000     populate_from_file(std::vector<double*, std::allocator<double*> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char) [2]
[3]     83.3    0.04    0.09 10040000         std::__cxx11::stod(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*) [3]
                0.05    0.04 10040000/10040000     double __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*) [4]
-----------------------------------------------
                0.05    0.04 10040000/10040000     std::__cxx11::stod(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*) [3]
[4]     56.7    0.05    0.04 10040000         double __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*) [4]
                0.02    0.00 10040000/10040000     __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*)::_Save_errno::~_Save_errno() [5]
                0.02    0.00 10040000/10040000     __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*)::_Save_errno::_Save_errno() [6]
                0.00    0.00 10040000/10040000     __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*)::_Range_chk::_S_chk(double, std::integral_constant<bool, false>) [23]
-----------------------------------------------
                0.02    0.00 10040000/10040000     double __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*) [4]
[5]     13.3    0.02    0.00 10040000         __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*)::_Save_errno::~_Save_errno() [5]
-----------------------------------------------
                0.02    0.00 10040000/10040000     double __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*) [4]
[6]     10.0    0.02    0.00 10040000         __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*)::_Save_errno::_Save_errno() [6]
-----------------------------------------------
                0.00    0.00    5020/25020       void __gnu_cxx::new_allocator<double>::construct<double, double&>(double*, double&) [12]
                0.01    0.00   20000/25020       void __gnu_cxx::new_allocator<double*>::construct<double*, double*&>(double**, double*&) [8]
[7]      6.7    0.01    0.00   25020         operator new(unsigned long, void*) [7]
-----------------------------------------------
                0.00    0.01   20000/20000       void std::allocator_traits<std::allocator<double*> >::construct<double*, double*&>(std::allocator<double*>&, double**, double*&) [9]
[8]      5.3    0.00    0.01   20000         void __gnu_cxx::new_allocator<double*>::construct<double*, double*&>(double**, double*&) [8]
                0.01    0.00   20000/25020       operator new(unsigned long, void*) [7]
                0.00    0.00   20000/60012       double*& std::forward<double*&>(std::remove_reference<double*&>::type&) [24]
-----------------------------------------------
                0.00    0.00      12/20000       void std::vector<double*, std::allocator<double*> >::_M_realloc_insert<double*&>(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >, double*&) [16]
                0.00    0.01   19988/20000       void std::vector<double*, std::allocator<double*> >::emplace_back<double*&>(double*&) [10]
[9]      5.3    0.00    0.01   20000         void std::allocator_traits<std::allocator<double*> >::construct<double*, double*&>(std::allocator<double*>&, double**, double*&) [9]
                0.00    0.01   20000/20000       void __gnu_cxx::new_allocator<double*>::construct<double*, double*&>(double**, double*&) [8]
                0.00    0.00   20000/60012       double*& std::forward<double*&>(std::remove_reference<double*&>::type&) [24]
-----------------------------------------------
                0.00    0.01   20000/20000       populate_from_file(std::vector<double*, std::allocator<double*> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char) [2]
[10]     5.3    0.00    0.01   20000         void std::vector<double*, std::allocator<double*> >::emplace_back<double*&>(double*&) [10]
                0.00    0.01   19988/20000       void std::allocator_traits<std::allocator<double*> >::construct<double*, double*&>(std::allocator<double*>&, double**, double*&) [9]
                0.00    0.00      12/12          void std::vector<double*, std::allocator<double*> >::_M_realloc_insert<double*&>(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >, double*&) [16]
                0.00    0.00   20000/60012       double*& std::forward<double*&>(std::remove_reference<double*&>::type&) [24]
                0.00    0.00      12/22          std::vector<double*, std::allocator<double*> >::end() [92]
-----------------------------------------------
                0.01    0.00       1/1           main [1]
[11]     3.3    0.01    0.00       1         std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const [11]
-----------------------------------------------
                0.00    0.00    5020/5020        void std::allocator_traits<std::allocator<double> >::construct<double, double&>(std::allocator<double>&, double*, double&) [13]
[12]     1.3    0.00    0.00    5020         void __gnu_cxx::new_allocator<double>::construct<double, double&>(double*, double&) [12]
                0.00    0.00    5020/25020       operator new(unsigned long, void*) [7]
                0.00    0.00    5020/15160       double& std::forward<double&>(std::remove_reference<double&>::type&) [30]
-----------------------------------------------
                0.00    0.00     100/5020        void std::vector<double, std::allocator<double> >::_M_realloc_insert<double&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&) [15]
                0.00    0.00    4920/5020        void std::vector<double, std::allocator<double> >::emplace_back<double&>(double&) [14]
[13]     1.3    0.00    0.00    5020         void std::allocator_traits<std::allocator<double> >::construct<double, double&>(std::allocator<double>&, double*, double&) [13]
                0.00    0.00    5020/5020        void __gnu_cxx::new_allocator<double>::construct<double, double&>(double*, double&) [12]
                0.00    0.00    5020/15160       double& std::forward<double&>(std::remove_reference<double&>::type&) [30]
-----------------------------------------------
                0.00    0.00    5020/5020        populate_from_file(std::vector<double*, std::allocator<double*> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char) [2]
[14]     1.3    0.00    0.00    5020         void std::vector<double, std::allocator<double> >::emplace_back<double&>(double&) [14]
                0.00    0.00    4920/5020        void std::allocator_traits<std::allocator<double> >::construct<double, double&>(std::allocator<double>&, double*, double&) [13]
                0.00    0.00     100/100         void std::vector<double, std::allocator<double> >::_M_realloc_insert<double&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&) [15]
                0.00    0.00    5020/15160       double& std::forward<double&>(std::remove_reference<double&>::type&) [30]
                0.00    0.00     100/100         std::vector<double, std::allocator<double> >::end() [66]
-----------------------------------------------
                0.00    0.00     100/100         void std::vector<double, std::allocator<double> >::emplace_back<double&>(double&) [14]
[15]     0.0    0.00    0.00     100         void std::vector<double, std::allocator<double> >::_M_realloc_insert<double&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&) [15]
                0.00    0.00     100/5020        void std::allocator_traits<std::allocator<double> >::construct<double, double&>(std::allocator<double>&, double*, double&) [13]
                0.00    0.00     300/310         std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [40]
                0.00    0.00     200/400         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const [34]
                0.00    0.00     200/200         double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&) [52]
                0.00    0.00     100/100         std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [62]
                0.00    0.00     100/100         std::vector<double, std::allocator<double> >::begin() [67]
                0.00    0.00     100/100         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&) [61]
                0.00    0.00     100/100         std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [63]
                0.00    0.00     100/15160       double& std::forward<double&>(std::remove_reference<double&>::type&) [30]
                0.00    0.00     100/110         void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&) [58]
                0.00    0.00     100/110         std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [56]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<double*, std::allocator<double*> >::emplace_back<double*&>(double*&) [10]
[16]     0.0    0.00    0.00      12         void std::vector<double*, std::allocator<double*> >::_M_realloc_insert<double*&>(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >, double*&) [16]
                0.00    0.00      12/20000       void std::allocator_traits<std::allocator<double*> >::construct<double*, double*&>(std::allocator<double*>&, double**, double*&) [9]
                0.00    0.00      36/47          std::_Vector_base<double*, std::allocator<double*> >::_M_get_Tp_allocator() [75]
                0.00    0.00      24/40068       __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::base() const [25]
                0.00    0.00      24/24          double** std::__uninitialized_move_if_noexcept_a<double**, double**, std::allocator<double*> >(double**, double**, double**, std::allocator<double*>&) [87]
                0.00    0.00      12/12          std::vector<double*, std::allocator<double*> >::_M_check_len(unsigned long, char const*) const [98]
                0.00    0.00      12/22          std::vector<double*, std::allocator<double*> >::begin() [93]
                0.00    0.00      12/12          __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::difference_type __gnu_cxx::operator-<double**, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&, __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&) [97]
                0.00    0.00      12/12          std::_Vector_base<double*, std::allocator<double*> >::_M_allocate(unsigned long) [99]
                0.00    0.00      12/60012       double*& std::forward<double*&>(std::remove_reference<double*&>::type&) [24]
                0.00    0.00      12/23          void std::_Destroy<double**, double*>(double**, double**, std::allocator<double*>&) [91]
                0.00    0.00      12/13          std::_Vector_base<double*, std::allocator<double*> >::_M_deallocate(double**, unsigned long) [94]
-----------------------------------------------
                0.00    0.00 10040000/10040000     double __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*) [4]
[23]     0.0    0.00    0.00 10040000         __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*)::_Range_chk::_S_chk(double, std::integral_constant<bool, false>) [23]
-----------------------------------------------
                0.00    0.00      12/60012       void std::vector<double*, std::allocator<double*> >::_M_realloc_insert<double*&>(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >, double*&) [16]
                0.00    0.00   20000/60012       void std::vector<double*, std::allocator<double*> >::emplace_back<double*&>(double*&) [10]
                0.00    0.00   20000/60012       void std::allocator_traits<std::allocator<double*> >::construct<double*, double*&>(std::allocator<double*>&, double**, double*&) [9]
                0.00    0.00   20000/60012       void __gnu_cxx::new_allocator<double*>::construct<double*, double*&>(double**, double*&) [8]
[24]     0.0    0.00    0.00   60012         double*& std::forward<double*&>(std::remove_reference<double*&>::type&) [24]
-----------------------------------------------
                0.00    0.00      24/40068       void std::vector<double*, std::allocator<double*> >::_M_realloc_insert<double*&>(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >, double*&) [16]
                0.00    0.00      24/40068       __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::difference_type __gnu_cxx::operator-<double**, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&, __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&) [97]
                0.00    0.00   40020/40068       bool __gnu_cxx::operator!=<double**, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&, __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&) [26]
[25]     0.0    0.00    0.00   40068         __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::base() const [25]
-----------------------------------------------
                0.00    0.00   20010/20010       clear_matrix(std::vector<double*, std::allocator<double*> >*) [102]
[26]     0.0    0.00    0.00   20010         bool __gnu_cxx::operator!=<double**, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&, __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&) [26]
                0.00    0.00   40020/40068       __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::base() const [25]
-----------------------------------------------
                0.00    0.00   20000/20000       clear_matrix(std::vector<double*, std::allocator<double*> >*) [102]
[27]     0.0    0.00    0.00   20000         __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::operator++() [27]
-----------------------------------------------
                0.00    0.00   20000/20000       clear_matrix(std::vector<double*, std::allocator<double*> >*) [102]
[28]     0.0    0.00    0.00   20000         __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::operator*() const [28]
-----------------------------------------------
                0.00    0.00   20000/20000       populate_from_file(std::vector<double*, std::allocator<double*> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char) [2]
[29]     0.0    0.00    0.00   20000         std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) [29]
-----------------------------------------------
                0.00    0.00     100/15160       void std::vector<double, std::allocator<double> >::_M_realloc_insert<double&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&) [15]
                0.00    0.00    5020/15160       void std::vector<double, std::allocator<double> >::emplace_back<double&>(double&) [14]
                0.00    0.00    5020/15160       void std::allocator_traits<std::allocator<double> >::construct<double, double&>(std::allocator<double>&, double*, double&) [13]
                0.00    0.00    5020/15160       void __gnu_cxx::new_allocator<double>::construct<double, double&>(double*, double&) [12]
[30]     0.0    0.00    0.00   15160         double& std::forward<double&>(std::remove_reference<double&>::type&) [30]
-----------------------------------------------
                0.00    0.00    5020/5020        populate_from_file(std::vector<double*, std::allocator<double*> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char) [2]
[31]     0.0    0.00    0.00    5020         std::vector<double, std::allocator<double> >::operator[](unsigned long) [31]
-----------------------------------------------
                0.00    0.00     600/600         double* std::__copy_move_a2<true, double*, double*>(double*, double*, double*) [49]
[32]     0.0    0.00    0.00     600         double* std::__niter_base<double*>(double*) [32]
-----------------------------------------------
                0.00    0.00      10/410         populate_from_file(std::vector<double*, std::allocator<double*> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char) [2]
                0.00    0.00     400/410         std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [62]
[33]     0.0    0.00    0.00     410         std::vector<double, std::allocator<double> >::size() const [33]
-----------------------------------------------
                0.00    0.00     200/400         void std::vector<double, std::allocator<double> >::_M_realloc_insert<double&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&) [15]
                0.00    0.00     200/400         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&) [61]
[34]     0.0    0.00    0.00     400         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const [34]
-----------------------------------------------
                0.00    0.00     400/400         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double*>(std::move_iterator<double*>) [37]
[35]     0.0    0.00    0.00     400         std::move_iterator<double*>::base() const [35]
-----------------------------------------------
                0.00    0.00     400/400         std::move_iterator<double*> std::__make_move_if_noexcept_iterator<double, std::move_iterator<double*> >(double*) [39]
[36]     0.0    0.00    0.00     400         std::move_iterator<double*>::move_iterator(double*) [36]
-----------------------------------------------
                0.00    0.00     400/400         double* std::copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [53]
[37]     0.0    0.00    0.00     400         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double*>(std::move_iterator<double*>) [37]
                0.00    0.00     400/400         std::move_iterator<double*>::base() const [35]
                0.00    0.00     400/400         double* std::__miter_base<double*>(double*) [38]
-----------------------------------------------
                0.00    0.00     400/400         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double*>(std::move_iterator<double*>) [37]
[38]     0.0    0.00    0.00     400         double* std::__miter_base<double*>(double*) [38]
-----------------------------------------------
                0.00    0.00     400/400         double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&) [52]
[39]     0.0    0.00    0.00     400         std::move_iterator<double*> std::__make_move_if_noexcept_iterator<double, std::move_iterator<double*> >(double*) [39]
                0.00    0.00     400/400         std::move_iterator<double*>::move_iterator(double*) [36]
-----------------------------------------------
                0.00    0.00      10/310         std::vector<double, std::allocator<double> >::~vector() [114]
                0.00    0.00     300/310         void std::vector<double, std::allocator<double> >::_M_realloc_insert<double&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&) [15]
[40]     0.0    0.00    0.00     310         std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [40]
-----------------------------------------------
                0.00    0.00     100/300         __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [60]
                0.00    0.00     200/300         std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&) [46]
[41]     0.0    0.00    0.00     300         __gnu_cxx::new_allocator<double>::max_size() const [41]
-----------------------------------------------
                0.00    0.00     100/200         std::vector<double, std::allocator<double> >::end() [66]
                0.00    0.00     100/200         std::vector<double, std::allocator<double> >::begin() [67]
[42]     0.0    0.00    0.00     200         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::__normal_iterator(double* const&) [42]
-----------------------------------------------
                0.00    0.00     200/200         std::vector<double, std::allocator<double> >::max_size() const [44]
[43]     0.0    0.00    0.00     200         std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const [43]
-----------------------------------------------
                0.00    0.00     200/200         std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [62]
[44]     0.0    0.00    0.00     200         std::vector<double, std::allocator<double> >::max_size() const [44]
                0.00    0.00     200/200         std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const [43]
                0.00    0.00     200/200         std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&) [46]
-----------------------------------------------
                0.00    0.00     200/200         double* std::__copy_move_a<true, double*, double*>(double*, double*, double*) [48]
[45]     0.0    0.00    0.00     200         double* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*) [45]
-----------------------------------------------
                0.00    0.00     200/200         std::vector<double, std::allocator<double> >::max_size() const [44]
[46]     0.0    0.00    0.00     200         std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&) [46]
                0.00    0.00     200/300         __gnu_cxx::new_allocator<double>::max_size() const [41]
-----------------------------------------------
                0.00    0.00     200/200         double* std::uninitialized_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [50]
[47]     0.0    0.00    0.00     200         double* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [47]
                0.00    0.00     200/200         double* std::copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [53]
-----------------------------------------------
                0.00    0.00     200/200         double* std::__copy_move_a2<true, double*, double*>(double*, double*, double*) [49]
[48]     0.0    0.00    0.00     200         double* std::__copy_move_a<true, double*, double*>(double*, double*, double*) [48]
                0.00    0.00     200/200         double* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*) [45]
-----------------------------------------------
                0.00    0.00     200/200         double* std::copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [53]
[49]     0.0    0.00    0.00     200         double* std::__copy_move_a2<true, double*, double*>(double*, double*, double*) [49]
                0.00    0.00     600/600         double* std::__niter_base<double*>(double*) [32]
                0.00    0.00     200/200         double* std::__copy_move_a<true, double*, double*>(double*, double*, double*) [48]
-----------------------------------------------
                0.00    0.00     200/200         double* std::__uninitialized_copy_a<std::move_iterator<double*>, double*, double>(std::move_iterator<double*>, std::move_iterator<double*>, double*, std::allocator<double>&) [51]
[50]     0.0    0.00    0.00     200         double* std::uninitialized_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [50]
                0.00    0.00     200/200         double* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [47]
-----------------------------------------------
                0.00    0.00     200/200         double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&) [52]
[51]     0.0    0.00    0.00     200         double* std::__uninitialized_copy_a<std::move_iterator<double*>, double*, double>(std::move_iterator<double*>, std::move_iterator<double*>, double*, std::allocator<double>&) [51]
                0.00    0.00     200/200         double* std::uninitialized_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [50]
-----------------------------------------------
                0.00    0.00     200/200         void std::vector<double, std::allocator<double> >::_M_realloc_insert<double&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&) [15]
[52]     0.0    0.00    0.00     200         double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&) [52]
                0.00    0.00     400/400         std::move_iterator<double*> std::__make_move_if_noexcept_iterator<double, std::move_iterator<double*> >(double*) [39]
                0.00    0.00     200/200         double* std::__uninitialized_copy_a<std::move_iterator<double*>, double*, double>(std::move_iterator<double*>, std::move_iterator<double*>, double*, std::allocator<double>&) [51]
-----------------------------------------------
                0.00    0.00     200/200         double* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [47]
[53]     0.0    0.00    0.00     200         double* std::copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [53]
                0.00    0.00     400/400         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double*>(std::move_iterator<double*>) [37]
                0.00    0.00     200/200         double* std::__copy_move_a2<true, double*, double*>(double*, double*, double*) [49]
-----------------------------------------------
                0.00    0.00      12/112         std::vector<double*, std::allocator<double*> >::_M_check_len(unsigned long, char const*) const [98]
                0.00    0.00     100/112         std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [62]
[54]     0.0    0.00    0.00     112         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [54]
-----------------------------------------------
                0.00    0.00     110/110         void std::_Destroy<double*>(double*, double*) [57]
[55]     0.0    0.00    0.00     110         void std::_Destroy_aux<true>::__destroy<double*>(double*, double*) [55]
-----------------------------------------------
                0.00    0.00      10/110         std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [110]
                0.00    0.00     100/110         void std::vector<double, std::allocator<double> >::_M_realloc_insert<double&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&) [15]
[56]     0.0    0.00    0.00     110         std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [56]
                0.00    0.00     100/100         std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long) [64]
-----------------------------------------------
                0.00    0.00     110/110         void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&) [58]
[57]     0.0    0.00    0.00     110         void std::_Destroy<double*>(double*, double*) [57]
                0.00    0.00     110/110         void std::_Destroy_aux<true>::__destroy<double*>(double*, double*) [55]
-----------------------------------------------
                0.00    0.00      10/110         std::vector<double, std::allocator<double> >::~vector() [114]
                0.00    0.00     100/110         void std::vector<double, std::allocator<double> >::_M_realloc_insert<double&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&) [15]
[58]     0.0    0.00    0.00     110         void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&) [58]
                0.00    0.00     110/110         void std::_Destroy<double*>(double*, double*) [57]
-----------------------------------------------
                0.00    0.00     100/100         std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long) [64]
[59]     0.0    0.00    0.00     100         __gnu_cxx::new_allocator<double>::deallocate(double*, unsigned long) [59]
-----------------------------------------------
                0.00    0.00     100/100         std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) [65]
[60]     0.0    0.00    0.00     100         __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [60]
                0.00    0.00     100/300         __gnu_cxx::new_allocator<double>::max_size() const [41]
-----------------------------------------------
                0.00    0.00     100/100         void std::vector<double, std::allocator<double> >::_M_realloc_insert<double&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&) [15]
[61]     0.0    0.00    0.00     100         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&) [61]
                0.00    0.00     200/400         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const [34]
-----------------------------------------------
                0.00    0.00     100/100         void std::vector<double, std::allocator<double> >::_M_realloc_insert<double&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&) [15]
[62]     0.0    0.00    0.00     100         std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [62]
                0.00    0.00     400/410         std::vector<double, std::allocator<double> >::size() const [33]
                0.00    0.00     200/200         std::vector<double, std::allocator<double> >::max_size() const [44]
                0.00    0.00     100/112         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [54]
-----------------------------------------------
                0.00    0.00     100/100         void std::vector<double, std::allocator<double> >::_M_realloc_insert<double&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&) [15]
[63]     0.0    0.00    0.00     100         std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [63]
                0.00    0.00     100/100         std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) [65]
-----------------------------------------------
                0.00    0.00     100/100         std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [56]
[64]     0.0    0.00    0.00     100         std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long) [64]
                0.00    0.00     100/100         __gnu_cxx::new_allocator<double>::deallocate(double*, unsigned long) [59]
-----------------------------------------------
                0.00    0.00     100/100         std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [63]
[65]     0.0    0.00    0.00     100         std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) [65]
                0.00    0.00     100/100         __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [60]
-----------------------------------------------
                0.00    0.00     100/100         void std::vector<double, std::allocator<double> >::emplace_back<double&>(double&) [14]
[66]     0.0    0.00    0.00     100         std::vector<double, std::allocator<double> >::end() [66]
                0.00    0.00     100/200         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::__normal_iterator(double* const&) [42]
-----------------------------------------------
                0.00    0.00     100/100         void std::vector<double, std::allocator<double> >::_M_realloc_insert<double&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&) [15]
[67]     0.0    0.00    0.00     100         std::vector<double, std::allocator<double> >::begin() [67]
                0.00    0.00     100/200         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::__normal_iterator(double* const&) [42]
-----------------------------------------------
                0.00    0.00      72/72          double** std::__copy_move_a2<true, double**, double**>(double**, double**, double**) [84]
[68]     0.0    0.00    0.00      72         double** std::__niter_base<double**>(double**) [68]
-----------------------------------------------
                0.00    0.00      48/48          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double**>(std::move_iterator<double**>) [72]
[69]     0.0    0.00    0.00      48         std::move_iterator<double**>::base() const [69]
-----------------------------------------------
                0.00    0.00      48/48          std::vector<double*, std::allocator<double*> >::_M_check_len(unsigned long, char const*) const [98]
[70]     0.0    0.00    0.00      48         std::vector<double*, std::allocator<double*> >::size() const [70]
-----------------------------------------------
                0.00    0.00      48/48          std::move_iterator<double**> std::__make_move_if_noexcept_iterator<double*, std::move_iterator<double**> >(double**) [74]
[71]     0.0    0.00    0.00      48         std::move_iterator<double**>::move_iterator(double**) [71]
-----------------------------------------------
                0.00    0.00      48/48          double** std::copy<std::move_iterator<double**>, double**>(std::move_iterator<double**>, std::move_iterator<double**>, double**) [88]
[72]     0.0    0.00    0.00      48         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double**>(std::move_iterator<double**>) [72]
                0.00    0.00      48/48          double** std::__miter_base<double**>(double**) [73]
                0.00    0.00      48/48          std::move_iterator<double**>::base() const [69]
-----------------------------------------------
                0.00    0.00      48/48          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double**>(std::move_iterator<double**>) [72]
[73]     0.0    0.00    0.00      48         double** std::__miter_base<double**>(double**) [73]
-----------------------------------------------
                0.00    0.00      48/48          double** std::__uninitialized_move_if_noexcept_a<double**, double**, std::allocator<double*> >(double**, double**, double**, std::allocator<double*>&) [87]
[74]     0.0    0.00    0.00      48         std::move_iterator<double**> std::__make_move_if_noexcept_iterator<double*, std::move_iterator<double**> >(double**) [74]
                0.00    0.00      48/48          std::move_iterator<double**>::move_iterator(double**) [71]
-----------------------------------------------
                0.00    0.00       1/47          std::vector<double*, std::allocator<double*> >::~vector() [134]
                0.00    0.00      10/47          std::vector<double*, std::allocator<double*> >::_M_erase_at_end(double**) [111]
                0.00    0.00      36/47          void std::vector<double*, std::allocator<double*> >::_M_realloc_insert<double*&>(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >, double*&) [16]
[75]     0.0    0.00    0.00      47         std::_Vector_base<double*, std::allocator<double*> >::_M_get_Tp_allocator() [75]
-----------------------------------------------
                0.00    0.00      22/44          std::vector<double*, std::allocator<double*> >::begin() [93]
                0.00    0.00      22/44          std::vector<double*, std::allocator<double*> >::end() [92]
[76]     0.0    0.00    0.00      44         __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::__normal_iterator(double** const&) [76]
-----------------------------------------------
                0.00    0.00      12/36          __gnu_cxx::new_allocator<double*>::allocate(unsigned long, void const*) [96]
                0.00    0.00      24/36          std::allocator_traits<std::allocator<double*> >::max_size(std::allocator<double*> const&) [81]
[77]     0.0    0.00    0.00      36         __gnu_cxx::new_allocator<double*>::max_size() const [77]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<double*, std::allocator<double*> >::max_size() const [79]
[78]     0.0    0.00    0.00      24         std::_Vector_base<double*, std::allocator<double*> >::_M_get_Tp_allocator() const [78]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<double*, std::allocator<double*> >::_M_check_len(unsigned long, char const*) const [98]
[79]     0.0    0.00    0.00      24         std::vector<double*, std::allocator<double*> >::max_size() const [79]
                0.00    0.00      24/24          std::allocator_traits<std::allocator<double*> >::max_size(std::allocator<double*> const&) [81]
                0.00    0.00      24/24          std::_Vector_base<double*, std::allocator<double*> >::_M_get_Tp_allocator() const [78]
-----------------------------------------------
                0.00    0.00      24/24          double** std::__copy_move_a<true, double**, double**>(double**, double**, double**) [83]
[80]     0.0    0.00    0.00      24         double** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<double*>(double* const*, double* const*, double**) [80]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<double*, std::allocator<double*> >::max_size() const [79]
[81]     0.0    0.00    0.00      24         std::allocator_traits<std::allocator<double*> >::max_size(std::allocator<double*> const&) [81]
                0.00    0.00      24/36          __gnu_cxx::new_allocator<double*>::max_size() const [77]
-----------------------------------------------
                0.00    0.00      24/24          double** std::uninitialized_copy<std::move_iterator<double**>, double**>(std::move_iterator<double**>, std::move_iterator<double**>, double**) [85]
[82]     0.0    0.00    0.00      24         double** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<double**>, double**>(std::move_iterator<double**>, std::move_iterator<double**>, double**) [82]
                0.00    0.00      24/24          double** std::copy<std::move_iterator<double**>, double**>(std::move_iterator<double**>, std::move_iterator<double**>, double**) [88]
-----------------------------------------------
                0.00    0.00      24/24          double** std::__copy_move_a2<true, double**, double**>(double**, double**, double**) [84]
[83]     0.0    0.00    0.00      24         double** std::__copy_move_a<true, double**, double**>(double**, double**, double**) [83]
                0.00    0.00      24/24          double** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<double*>(double* const*, double* const*, double**) [80]
-----------------------------------------------
                0.00    0.00      24/24          double** std::copy<std::move_iterator<double**>, double**>(std::move_iterator<double**>, std::move_iterator<double**>, double**) [88]
[84]     0.0    0.00    0.00      24         double** std::__copy_move_a2<true, double**, double**>(double**, double**, double**) [84]
                0.00    0.00      72/72          double** std::__niter_base<double**>(double**) [68]
                0.00    0.00      24/24          double** std::__copy_move_a<true, double**, double**>(double**, double**, double**) [83]
-----------------------------------------------
                0.00    0.00      24/24          double** std::__uninitialized_copy_a<std::move_iterator<double**>, double**, double*>(std::move_iterator<double**>, std::move_iterator<double**>, double**, std::allocator<double*>&) [86]
[85]     0.0    0.00    0.00      24         double** std::uninitialized_copy<std::move_iterator<double**>, double**>(std::move_iterator<double**>, std::move_iterator<double**>, double**) [85]
                0.00    0.00      24/24          double** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<double**>, double**>(std::move_iterator<double**>, std::move_iterator<double**>, double**) [82]
-----------------------------------------------
                0.00    0.00      24/24          double** std::__uninitialized_move_if_noexcept_a<double**, double**, std::allocator<double*> >(double**, double**, double**, std::allocator<double*>&) [87]
[86]     0.0    0.00    0.00      24         double** std::__uninitialized_copy_a<std::move_iterator<double**>, double**, double*>(std::move_iterator<double**>, std::move_iterator<double**>, double**, std::allocator<double*>&) [86]
                0.00    0.00      24/24          double** std::uninitialized_copy<std::move_iterator<double**>, double**>(std::move_iterator<double**>, std::move_iterator<double**>, double**) [85]
-----------------------------------------------
                0.00    0.00      24/24          void std::vector<double*, std::allocator<double*> >::_M_realloc_insert<double*&>(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >, double*&) [16]
[87]     0.0    0.00    0.00      24         double** std::__uninitialized_move_if_noexcept_a<double**, double**, std::allocator<double*> >(double**, double**, double**, std::allocator<double*>&) [87]
                0.00    0.00      48/48          std::move_iterator<double**> std::__make_move_if_noexcept_iterator<double*, std::move_iterator<double**> >(double**) [74]
                0.00    0.00      24/24          double** std::__uninitialized_copy_a<std::move_iterator<double**>, double**, double*>(std::move_iterator<double**>, std::move_iterator<double**>, double**, std::allocator<double*>&) [86]
-----------------------------------------------
                0.00    0.00      24/24          double** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<double**>, double**>(std::move_iterator<double**>, std::move_iterator<double**>, double**) [82]
[88]     0.0    0.00    0.00      24         double** std::copy<std::move_iterator<double**>, double**>(std::move_iterator<double**>, std::move_iterator<double**>, double**) [88]
                0.00    0.00      48/48          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double**>(std::move_iterator<double**>) [72]
                0.00    0.00      24/24          double** std::__copy_move_a2<true, double**, double**>(double**, double**, double**) [84]
-----------------------------------------------
                0.00    0.00      23/23          void std::_Destroy<double**>(double**, double**) [90]
[89]     0.0    0.00    0.00      23         void std::_Destroy_aux<true>::__destroy<double**>(double**, double**) [89]
-----------------------------------------------
                0.00    0.00      23/23          void std::_Destroy<double**, double*>(double**, double**, std::allocator<double*>&) [91]
[90]     0.0    0.00    0.00      23         void std::_Destroy<double**>(double**, double**) [90]
                0.00    0.00      23/23          void std::_Destroy_aux<true>::__destroy<double**>(double**, double**) [89]
-----------------------------------------------
                0.00    0.00       1/23          std::vector<double*, std::allocator<double*> >::~vector() [134]
                0.00    0.00      10/23          std::vector<double*, std::allocator<double*> >::_M_erase_at_end(double**) [111]
                0.00    0.00      12/23          void std::vector<double*, std::allocator<double*> >::_M_realloc_insert<double*&>(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >, double*&) [16]
[91]     0.0    0.00    0.00      23         void std::_Destroy<double**, double*>(double**, double**, std::allocator<double*>&) [91]
                0.00    0.00      23/23          void std::_Destroy<double**>(double**, double**) [90]
-----------------------------------------------
                0.00    0.00      10/22          clear_matrix(std::vector<double*, std::allocator<double*> >*) [102]
                0.00    0.00      12/22          void std::vector<double*, std::allocator<double*> >::emplace_back<double*&>(double*&) [10]
[92]     0.0    0.00    0.00      22         std::vector<double*, std::allocator<double*> >::end() [92]
                0.00    0.00      22/44          __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::__normal_iterator(double** const&) [76]
-----------------------------------------------
                0.00    0.00      10/22          clear_matrix(std::vector<double*, std::allocator<double*> >*) [102]
                0.00    0.00      12/22          void std::vector<double*, std::allocator<double*> >::_M_realloc_insert<double*&>(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >, double*&) [16]
[93]     0.0    0.00    0.00      22         std::vector<double*, std::allocator<double*> >::begin() [93]
                0.00    0.00      22/44          __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::__normal_iterator(double** const&) [76]
-----------------------------------------------
                0.00    0.00       1/13          std::_Vector_base<double*, std::allocator<double*> >::~_Vector_base() [126]
                0.00    0.00      12/13          void std::vector<double*, std::allocator<double*> >::_M_realloc_insert<double*&>(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >, double*&) [16]
[94]     0.0    0.00    0.00      13         std::_Vector_base<double*, std::allocator<double*> >::_M_deallocate(double**, unsigned long) [94]
                0.00    0.00      12/12          std::allocator_traits<std::allocator<double*> >::deallocate(std::allocator<double*>&, double**, unsigned long) [100]
-----------------------------------------------
                0.00    0.00      12/12          std::allocator_traits<std::allocator<double*> >::deallocate(std::allocator<double*>&, double**, unsigned long) [100]
[95]     0.0    0.00    0.00      12         __gnu_cxx::new_allocator<double*>::deallocate(double**, unsigned long) [95]
-----------------------------------------------
                0.00    0.00      12/12          std::allocator_traits<std::allocator<double*> >::allocate(std::allocator<double*>&, unsigned long) [101]
[96]     0.0    0.00    0.00      12         __gnu_cxx::new_allocator<double*>::allocate(unsigned long, void const*) [96]
                0.00    0.00      12/36          __gnu_cxx::new_allocator<double*>::max_size() const [77]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<double*, std::allocator<double*> >::_M_realloc_insert<double*&>(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >, double*&) [16]
[97]     0.0    0.00    0.00      12         __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::difference_type __gnu_cxx::operator-<double**, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&, __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&) [97]
                0.00    0.00      24/40068       __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::base() const [25]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<double*, std::allocator<double*> >::_M_realloc_insert<double*&>(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >, double*&) [16]
[98]     0.0    0.00    0.00      12         std::vector<double*, std::allocator<double*> >::_M_check_len(unsigned long, char const*) const [98]
                0.00    0.00      48/48          std::vector<double*, std::allocator<double*> >::size() const [70]
                0.00    0.00      24/24          std::vector<double*, std::allocator<double*> >::max_size() const [79]
                0.00    0.00      12/112         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [54]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<double*, std::allocator<double*> >::_M_realloc_insert<double*&>(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >, double*&) [16]
[99]     0.0    0.00    0.00      12         std::_Vector_base<double*, std::allocator<double*> >::_M_allocate(unsigned long) [99]
                0.00    0.00      12/12          std::allocator_traits<std::allocator<double*> >::allocate(std::allocator<double*>&, unsigned long) [101]
-----------------------------------------------
                0.00    0.00      12/12          std::_Vector_base<double*, std::allocator<double*> >::_M_deallocate(double**, unsigned long) [94]
[100]    0.0    0.00    0.00      12         std::allocator_traits<std::allocator<double*> >::deallocate(std::allocator<double*>&, double**, unsigned long) [100]
                0.00    0.00      12/12          __gnu_cxx::new_allocator<double*>::deallocate(double**, unsigned long) [95]
-----------------------------------------------
                0.00    0.00      12/12          std::_Vector_base<double*, std::allocator<double*> >::_M_allocate(unsigned long) [99]
[101]    0.0    0.00    0.00      12         std::allocator_traits<std::allocator<double*> >::allocate(std::allocator<double*>&, unsigned long) [101]
                0.00    0.00      12/12          __gnu_cxx::new_allocator<double*>::allocate(unsigned long, void const*) [96]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[102]    0.0    0.00    0.00      10         clear_matrix(std::vector<double*, std::allocator<double*> >*) [102]
                0.00    0.00   20010/20010       bool __gnu_cxx::operator!=<double**, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&, __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&) [26]
                0.00    0.00   20000/20000       __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::operator*() const [28]
                0.00    0.00   20000/20000       __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::operator++() [27]
                0.00    0.00      10/22          std::vector<double*, std::allocator<double*> >::begin() [93]
                0.00    0.00      10/22          std::vector<double*, std::allocator<double*> >::end() [92]
                0.00    0.00      10/10          std::vector<double*, std::allocator<double*> >::clear() [112]
-----------------------------------------------
                0.00    0.00      10/10          std::allocator<double>::allocator() [105]
[103]    0.0    0.00    0.00      10         __gnu_cxx::new_allocator<double>::new_allocator() [103]
-----------------------------------------------
                0.00    0.00      10/10          std::allocator<double>::~allocator() [106]
[104]    0.0    0.00    0.00      10         __gnu_cxx::new_allocator<double>::~new_allocator() [104]
-----------------------------------------------
                0.00    0.00      10/10          std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl() [107]
[105]    0.0    0.00    0.00      10         std::allocator<double>::allocator() [105]
                0.00    0.00      10/10          __gnu_cxx::new_allocator<double>::new_allocator() [103]
-----------------------------------------------
                0.00    0.00      10/10          std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl() [108]
[106]    0.0    0.00    0.00      10         std::allocator<double>::~allocator() [106]
                0.00    0.00      10/10          __gnu_cxx::new_allocator<double>::~new_allocator() [104]
-----------------------------------------------
                0.00    0.00      10/10          std::_Vector_base<double, std::allocator<double> >::_Vector_base() [109]
[107]    0.0    0.00    0.00      10         std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl() [107]
                0.00    0.00      10/10          std::allocator<double>::allocator() [105]
-----------------------------------------------
                0.00    0.00      10/10          std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [110]
[108]    0.0    0.00    0.00      10         std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl() [108]
                0.00    0.00      10/10          std::allocator<double>::~allocator() [106]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<double, std::allocator<double> >::vector() [113]
[109]    0.0    0.00    0.00      10         std::_Vector_base<double, std::allocator<double> >::_Vector_base() [109]
                0.00    0.00      10/10          std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl() [107]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<double, std::allocator<double> >::~vector() [114]
[110]    0.0    0.00    0.00      10         std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [110]
                0.00    0.00      10/110         std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [56]
                0.00    0.00      10/10          std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl() [108]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<double*, std::allocator<double*> >::clear() [112]
[111]    0.0    0.00    0.00      10         std::vector<double*, std::allocator<double*> >::_M_erase_at_end(double**) [111]
                0.00    0.00      10/47          std::_Vector_base<double*, std::allocator<double*> >::_M_get_Tp_allocator() [75]
                0.00    0.00      10/23          void std::_Destroy<double**, double*>(double**, double**, std::allocator<double*>&) [91]
-----------------------------------------------
                0.00    0.00      10/10          clear_matrix(std::vector<double*, std::allocator<double*> >*) [102]
[112]    0.0    0.00    0.00      10         std::vector<double*, std::allocator<double*> >::clear() [112]
                0.00    0.00      10/10          std::vector<double*, std::allocator<double*> >::_M_erase_at_end(double**) [111]
-----------------------------------------------
                0.00    0.00      10/10          populate_from_file(std::vector<double*, std::allocator<double*> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char) [2]
[113]    0.0    0.00    0.00      10         std::vector<double, std::allocator<double> >::vector() [113]
                0.00    0.00      10/10          std::_Vector_base<double, std::allocator<double> >::_Vector_base() [109]
-----------------------------------------------
                0.00    0.00      10/10          populate_from_file(std::vector<double*, std::allocator<double*> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char) [2]
[114]    0.0    0.00    0.00      10         std::vector<double, std::allocator<double> >::~vector() [114]
                0.00    0.00      10/310         std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [40]
                0.00    0.00      10/110         void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&) [58]
                0.00    0.00      10/10          std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [110]
-----------------------------------------------
                0.00    0.00       1/3           std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [128]
                0.00    0.00       2/3           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [132]
[115]    0.0    0.00    0.00       3         std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [115]
-----------------------------------------------
                0.00    0.00       2/2           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [131]
[116]    0.0    0.00    0.00       2         std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const [116]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [163]
[117]    0.0    0.00    0.00       1         _GLOBAL__sub_I_main [117]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [118]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [117]
[118]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [118]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<double*>::allocator() [121]
[119]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<double*>::new_allocator() [119]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<double*>::~allocator() [122]
[120]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<double*>::~new_allocator() [120]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<double*, std::allocator<double*> >::_Vector_impl::_Vector_impl() [123]
[121]    0.0    0.00    0.00       1         std::allocator<double*>::allocator() [121]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<double*>::new_allocator() [119]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<double*, std::allocator<double*> >::_Vector_impl::~_Vector_impl() [124]
[122]    0.0    0.00    0.00       1         std::allocator<double*>::~allocator() [122]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<double*>::~new_allocator() [120]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<double*, std::allocator<double*> >::_Vector_base() [125]
[123]    0.0    0.00    0.00       1         std::_Vector_base<double*, std::allocator<double*> >::_Vector_impl::_Vector_impl() [123]
                0.00    0.00       1/1           std::allocator<double*>::allocator() [121]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<double*, std::allocator<double*> >::~_Vector_base() [126]
[124]    0.0    0.00    0.00       1         std::_Vector_base<double*, std::allocator<double*> >::_Vector_impl::~_Vector_impl() [124]
                0.00    0.00       1/1           std::allocator<double*>::~allocator() [122]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<double*, std::allocator<double*> >::vector() [133]
[125]    0.0    0.00    0.00       1         std::_Vector_base<double*, std::allocator<double*> >::_Vector_base() [125]
                0.00    0.00       1/1           std::_Vector_base<double*, std::allocator<double*> >::_Vector_impl::_Vector_impl() [123]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<double*, std::allocator<double*> >::~vector() [134]
[126]    0.0    0.00    0.00       1         std::_Vector_base<double*, std::allocator<double*> >::~_Vector_base() [126]
                0.00    0.00       1/13          std::_Vector_base<double*, std::allocator<double*> >::_M_deallocate(double**, unsigned long) [94]
                0.00    0.00       1/1           std::_Vector_base<double*, std::allocator<double*> >::_Vector_impl::~_Vector_impl() [124]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[127]    0.0    0.00    0.00       1         std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [127]
                0.00    0.00       1/1           std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [128]
-----------------------------------------------
                0.00    0.00       1/1           std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [127]
[128]    0.0    0.00    0.00       1         std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [128]
                0.00    0.00       1/3           std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [115]
                0.00    0.00       1/1           std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&) [130]
-----------------------------------------------
                0.00    0.00       1/1           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [132]
[129]    0.0    0.00    0.00       1         std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&) [129]
-----------------------------------------------
                0.00    0.00       1/1           std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [128]
[130]    0.0    0.00    0.00       1         std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&) [130]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[131]    0.0    0.00    0.00       1         std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [131]
                0.00    0.00       2/2           std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const [116]
                0.00    0.00       1/1           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [132]
-----------------------------------------------
                0.00    0.00       1/1           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [131]
[132]    0.0    0.00    0.00       1         std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [132]
                0.00    0.00       2/3           std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [115]
                0.00    0.00       1/1           std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&) [129]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[133]    0.0    0.00    0.00       1         std::vector<double*, std::allocator<double*> >::vector() [133]
                0.00    0.00       1/1           std::_Vector_base<double*, std::allocator<double*> >::_Vector_base() [125]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[134]    0.0    0.00    0.00       1         std::vector<double*, std::allocator<double*> >::~vector() [134]
                0.00    0.00       1/47          std::_Vector_base<double*, std::allocator<double*> >::_M_get_Tp_allocator() [75]
                0.00    0.00       1/23          void std::_Destroy<double**, double*>(double**, double**, std::allocator<double*>&) [91]
                0.00    0.00       1/1           std::_Vector_base<double*, std::allocator<double*> >::~_Vector_base() [126]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [117] _GLOBAL__sub_I_main    [80] double** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<double*>(double* const*, double* const*, double**) [134] std::vector<double*, std::allocator<double*> >::~vector()
 [102] clear_matrix(std::vector<double*, std::allocator<double*> >*) [45] double* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*) [14] void std::vector<double, std::allocator<double> >::emplace_back<double&>(double&)
   [2] populate_from_file(std::vector<double*, std::allocator<double*> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char) [89] void std::_Destroy_aux<true>::__destroy<double**>(double**, double**) [15] void std::vector<double, std::allocator<double> >::_M_realloc_insert<double&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&)
 [118] __static_initialization_and_destruction_0(int, int) [55] void std::_Destroy_aux<true>::__destroy<double*>(double*, double*) [66] std::vector<double, std::allocator<double> >::end()
  [95] __gnu_cxx::new_allocator<double*>::deallocate(double**, unsigned long) [99] std::_Vector_base<double*, std::allocator<double*> >::_M_allocate(unsigned long) [67] std::vector<double, std::allocator<double> >::begin()
  [96] __gnu_cxx::new_allocator<double*>::allocate(unsigned long, void const*) [123] std::_Vector_base<double*, std::allocator<double*> >::_Vector_impl::_Vector_impl() [113] std::vector<double, std::allocator<double> >::vector()
   [8] void __gnu_cxx::new_allocator<double*>::construct<double*, double*&>(double**, double*&) [124] std::_Vector_base<double*, std::allocator<double*> >::_Vector_impl::~_Vector_impl() [114] std::vector<double, std::allocator<double> >::~vector()
 [119] __gnu_cxx::new_allocator<double*>::new_allocator() [94] std::_Vector_base<double*, std::allocator<double*> >::_M_deallocate(double**, unsigned long) [31] std::vector<double, std::allocator<double> >::operator[](unsigned long)
 [120] __gnu_cxx::new_allocator<double*>::~new_allocator() [75] std::_Vector_base<double*, std::allocator<double*> >::_M_get_Tp_allocator() [3] std::__cxx11::stod(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)
  [59] __gnu_cxx::new_allocator<double>::deallocate(double*, unsigned long) [125] std::_Vector_base<double*, std::allocator<double*> >::_Vector_base() [72] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double**>(std::move_iterator<double**>)
  [60] __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [126] std::_Vector_base<double*, std::allocator<double*> >::~_Vector_base() [73] double** std::__miter_base<double**>(double**)
  [12] void __gnu_cxx::new_allocator<double>::construct<double, double&>(double*, double&) [63] std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [37] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double*>(std::move_iterator<double*>)
 [103] __gnu_cxx::new_allocator<double>::new_allocator() [107] std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl() [38] double* std::__miter_base<double*>(double*)
 [104] __gnu_cxx::new_allocator<double>::~new_allocator() [108] std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl() [68] double** std::__niter_base<double**>(double**)
  [76] __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::__normal_iterator(double** const&) [56] std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [32] double* std::__niter_base<double*>(double*)
  [27] __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::operator++() [40] std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [83] double** std::__copy_move_a<true, double**, double**>(double**, double**, double**)
  [42] __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::__normal_iterator(double* const&) [109] std::_Vector_base<double, std::allocator<double> >::_Vector_base() [48] double* std::__copy_move_a<true, double*, double*>(double*, double*, double*)
   [4] double __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*) [110] std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [84] double** std::__copy_move_a2<true, double**, double**>(double**, double**, double**)
  [97] __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::difference_type __gnu_cxx::operator-<double**, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&, __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&) [71] std::move_iterator<double**>::move_iterator(double**) [49] double* std::__copy_move_a2<true, double*, double*>(double*, double*, double*)
  [61] __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&) [36] std::move_iterator<double*>::move_iterator(double*) [85] double** std::uninitialized_copy<std::move_iterator<double**>, double**>(std::move_iterator<double**>, std::move_iterator<double**>, double**)
  [26] bool __gnu_cxx::operator!=<double**, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&, __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > > const&) [100] std::allocator_traits<std::allocator<double*> >::deallocate(std::allocator<double*>&, double**, unsigned long) [50] double* std::uninitialized_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*)
  [77] __gnu_cxx::new_allocator<double*>::max_size() const [101] std::allocator_traits<std::allocator<double*> >::allocate(std::allocator<double*>&, unsigned long) [86] double** std::__uninitialized_copy_a<std::move_iterator<double**>, double**, double*>(std::move_iterator<double**>, std::move_iterator<double**>, double**, std::allocator<double*>&)
  [41] __gnu_cxx::new_allocator<double>::max_size() const [81] std::allocator_traits<std::allocator<double*> >::max_size(std::allocator<double*> const&) [51] double* std::__uninitialized_copy_a<std::move_iterator<double*>, double*, double>(std::move_iterator<double*>, std::move_iterator<double*>, double*, std::allocator<double>&)
  [25] __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::base() const [9] void std::allocator_traits<std::allocator<double*> >::construct<double*, double*&>(std::allocator<double*>&, double**, double*&) [74] std::move_iterator<double**> std::__make_move_if_noexcept_iterator<double*, std::move_iterator<double**> >(double**)
  [28] __gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >::operator*() const [64] std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long) [39] std::move_iterator<double*> std::__make_move_if_noexcept_iterator<double, std::move_iterator<double*> >(double*)
  [34] __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const [65] std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) [87] double** std::__uninitialized_move_if_noexcept_a<double**, double**, std::allocator<double*> >(double**, double**, double**, std::allocator<double*>&)
  [78] std::_Vector_base<double*, std::allocator<double*> >::_M_get_Tp_allocator() const [46] std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&) [52] double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&)
  [43] std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const [13] void std::allocator_traits<std::allocator<double> >::construct<double, double&>(std::allocator<double>&, double*, double&) [54] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  [69] std::move_iterator<double**>::base() const [82] double** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<double**>, double**>(std::move_iterator<double**>, std::move_iterator<double**>, double**) [88] double** std::copy<std::move_iterator<double**>, double**>(std::move_iterator<double**>, std::move_iterator<double**>, double**)
  [35] std::move_iterator<double*>::base() const [47] double* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [53] double* std::copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*)
 [116] std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const [127] std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [24] double*& std::forward<double*&>(std::remove_reference<double*&>::type&)
 [115] std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [128] std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [30] double& std::forward<double&>(std::remove_reference<double&>::type&)
  [11] std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const [129] std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&) [90] void std::_Destroy<double**>(double**, double**)
  [98] std::vector<double*, std::allocator<double*> >::_M_check_len(unsigned long, char const*) const [130] std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&) [91] void std::_Destroy<double**, double*>(double**, double**, std::allocator<double*>&)
  [70] std::vector<double*, std::allocator<double*> >::size() const [131] std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [57] void std::_Destroy<double*>(double*, double*)
  [79] std::vector<double*, std::allocator<double*> >::max_size() const [132] std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [58] void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&)
  [62] std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [10] void std::vector<double*, std::allocator<double*> >::emplace_back<double*&>(double*&) [29] std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)
  [33] std::vector<double, std::allocator<double> >::size() const [111] std::vector<double*, std::allocator<double*> >::_M_erase_at_end(double**) [23] __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*)::_Range_chk::_S_chk(double, std::integral_constant<bool, false>)
  [44] std::vector<double, std::allocator<double> >::max_size() const [16] void std::vector<double*, std::allocator<double*> >::_M_realloc_insert<double*&>(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >, double*&) [6] __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*)::_Save_errno::_Save_errno()
 [121] std::allocator<double*>::allocator() [92] std::vector<double*, std::allocator<double*> >::end() [5] __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*)::_Save_errno::~_Save_errno()
 [122] std::allocator<double*>::~allocator() [93] std::vector<double*, std::allocator<double*> >::begin() [7] operator new(unsigned long, void*)
 [105] std::allocator<double>::allocator() [112] std::vector<double*, std::allocator<double*> >::clear()
 [106] std::allocator<double>::~allocator() [133] std::vector<double*, std::allocator<double*> >::vector()
